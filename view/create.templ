package view

import "github.com/de4et/command-constructor/types"
import "strings"


templ CreateTemplate(user *types.User, title string) {
	@page(title, user) {
		<div class="create-menu">
			<h2 class="body-title">
				{ title }
			</h2>

			<div class="preview-command"> 
				<span class="preview-command-text preview-command-commandname">имя</span>
			</div>

			<form action="api/v1/command" class="create-form">
				<input name="name" placeholder="Название" class="create-form-input form-input-name"/>
				<textarea spellcheck="false" name="description" placeholder="Описание" class="create-form-input form-input-description"/>
				<input name="commandName" oninput="commandNameInput(event)" placeholder="имя" class="create-form-input form-input-commandName"/>

				<h4 class="arguments-title">Аргументы</h4>
				<div class="create-form-arguments">
					<button class="add-argument-button" onclick="addArgumentClick(event)"> 
						<svg fill="white" class="add-argument-icon" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="white" viewBox="0 0 45.402 45.402" xml:space="preserve">
						<g>
							<path d="M41.267,18.557H26.832V4.134C26.832,1.851,24.99,0,22.707,0c-2.283,0-4.124,1.851-4.124,4.135v14.432H4.141   c-2.283,0-4.139,1.851-4.138,4.135c-0.001,1.141,0.46,2.187,1.207,2.934c0.748,0.749,1.78,1.222,2.92,1.222h14.453V41.27   c0,1.142,0.453,2.176,1.201,2.922c0.748,0.748,1.777,1.211,2.919,1.211c2.282,0,4.129-1.851,4.129-4.133V26.857h14.435   c2.283,0,4.134-1.867,4.133-4.15C45.399,20.425,43.548,18.557,41.267,18.557z"/>
						</g>
						</svg>
					</button>
				</div>

				<template id="argument-template">
					<div class="argument-edit"> 
						<div class="argument-header">
							<div class="argument-drag" onmousedown="argumentMouseDown(event)"> 
								<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet">

									<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" stroke="none">
										<path d="M1749 4977 c-70 -26 -131 -90 -149 -157 -6 -21 -10 -282 -10 -662 l0 -627 -647 -3 c-717 -3 -673 1 -742 -69 -52 -52 -66 -86 -66 -170 0 -67 3 -81 30 -125 19 -30 49 -60 79 -79 l49 -30 807 0 807 0 49 30 c30 19 60 49 79 79 l30 49 0 807 0 807 -30 49 c-42 68 -105 105 -187 110 -39 3 -77 -1 -99 -9z"/>
										<path d="M3207 4976 c-59 -22 -103 -62 -131 -119 l-26 -53 2 -795 3 -796 30 -49 c19 -30 49 -60 79 -79 l49 -30 796 -3 795 -2 52 25 c176 86 177 336 1 432 -29 17 -85 18 -679 21 l-647 3 -3 647 c-3 590 -5 650 -20 678 -23 41 -72 90 -111 111 -43 22 -143 27 -190 9z"/>
										<path d="M259 2042 c-187 -97 -161 -386 41 -442 21 -6 282 -10 662 -10 l627 0 3 -647 c3 -595 4 -651 21 -680 96 -176 346 -175 432 1 l25 52 -2 795 -3 796 -30 49 c-19 30 -49 60 -79 79 l-49 30 -797 3 -797 2 -54 -28z"/>
										<path d="M3181 2044 c-58 -29 -104 -84 -122 -143 -7 -24 -9 -298 -7 -822 l3 -786 30 -49 c98 -157 332 -147 422 19 17 29 18 85 21 679 l3 647 647 3 c594 3 650 4 679 21 166 90 176 324 19 422 l-49 30 -796 3 -796 2 -54 -26z"/>
									</g>
								</svg>
							</div>
							<div class="argument-delimiter">
							</div>
							<button onclick="deleteArgumentClick(event)" class="argument-delete">
								<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 64 64" width="48px" height="48px"><path d="M 28 11 C 26.895 11 26 11.895 26 13 L 26 14 L 13 14 C 11.896 14 11 14.896 11 16 C 11 17.104 11.896 18 13 18 L 14.160156 18 L 16.701172 48.498047 C 16.957172 51.583047 19.585641 54 22.681641 54 L 41.318359 54 C 44.414359 54 47.041828 51.583047 47.298828 48.498047 L 49.839844 18 L 51 18 C 52.104 18 53 17.104 53 16 C 53 14.896 52.104 14 51 14 L 38 14 L 38 13 C 38 11.895 37.105 11 36 11 L 28 11 z M 18.173828 18 L 45.828125 18 L 43.3125 48.166016 C 43.2265 49.194016 42.352313 50 41.320312 50 L 22.681641 50 C 21.648641 50 20.7725 49.194016 20.6875 48.166016 L 18.173828 18 z"/></svg>
							</button>
							<script>
								$(document.currentScript.previousElementSibling).hover(function(){
									$(this).closest(".argument-edit").toggleClass('trembling');
								});
							</script>
						</div>
						<div class="argument-type">
							<span>Тип: </span>

							<div class="select-argument-type-block">
								<select class="select-argument-type" onchange="selectArgumentTypeChange(event)" >
									<option value="common-argument" data-type-id="0">
										Имя - значение
									</option>
									<option value="withoutvalue-argument" data-type-id="1">
										Без значения(только имя)
									</option>
									<option value="nameless-argument" data-type-id="2">
										Без имени(только значение)
									</option>
									<option value="dropdown-argument" data-type-id="3">
										Выпадающее меню
									</option>
								</select>
								<script>
									document.currentScript.parentElement.querySelector(".select-argument-type").dispatchEvent(new Event('change'))
								</script>
							</div>
						</div>
					</div>
					<script>


					</script>
				</template>

				<template id="argument-target-template">
					<div class="argument-target show">
						<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet">
							<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" stroke="none">
								<path d="M1749 4977 c-70 -26 -131 -90 -149 -157 -6 -21 -10 -282 -10 -662 l0 -627 -647 -3 c-717 -3 -673 1 -742 -69 -52 -52 -66 -86 -66 -170 0 -67 3 -81 30 -125 19 -30 49 -60 79 -79 l49 -30 807 0 807 0 49 30 c30 19 60 49 79 79 l30 49 0 807 0 807 -30 49 c-42 68 -105 105 -187 110 -39 3 -77 -1 -99 -9z"/>
								<path d="M3207 4976 c-59 -22 -103 -62 -131 -119 l-26 -53 2 -795 3 -796 30 -49 c19 -30 49 -60 79 -79 l49 -30 796 -3 795 -2 52 25 c176 86 177 336 1 432 -29 17 -85 18 -679 21 l-647 3 -3 647 c-3 590 -5 650 -20 678 -23 41 -72 90 -111 111 -43 22 -143 27 -190 9z"/>
								<path d="M259 2042 c-187 -97 -161 -386 41 -442 21 -6 282 -10 662 -10 l627 0 3 -647 c3 -595 4 -651 21 -680 96 -176 346 -175 432 1 l25 52 -2 795 -3 796 -30 49 c-19 30 -49 60 -79 79 l-49 30 -797 3 -797 2 -54 -28z"/>
								<path d="M3181 2044 c-58 -29 -104 -84 -122 -143 -7 -24 -9 -298 -7 -822 l3 -786 30 -49 c98 -157 332 -147 422 19 17 29 18 85 21 679 l3 647 647 3 c594 3 650 4 679 21 166 90 176 324 19 422 l-49 30 -796 3 -796 2 -54 -26z"/>
							</g>
						</svg>
					</div>
				</template>

				<template id="common-argument">
					<label class="isconstant-label"><input oninput="updatePreviewCommand()" type="checkbox" class="argument-isconstant-checkbox" />Неизменяемый</label>
					<input oninput="updatePreviewCommand()" class="argument-name-input argument-input" placeholder="Имя" />
					<textarea spellcheck="false" class="argument-description-textarea" placeholder="Краткое описание" />
					<input oninput="updatePreviewCommand()" class="argument-default-value argument-input" placeholder="Значение по умолчанию" />
				</template>

				<template id="withoutvalue-argument">
					<label class="isconstant-label"><input oninput="updatePreviewCommand()" type="checkbox" checked="checked" disabled class="argument-isconstant-checkbox" />Неизменяемый</label>
					<input oninput="updatePreviewCommand()" class="argument-name-input argument-input" placeholder="Имя" />
					<textarea spellcheck="false" class="argument-description-textarea" placeholder="Краткое описание" />
				</template>

				<template id="nameless-argument">
					<label class="isconstant-label"><input oninput="updatePreviewCommand()" type="checkbox" class="argument-isconstant-checkbox" />Неизменяемый</label>
					<textarea spellcheck="false" class="argument-description-textarea" placeholder="Краткое описание" />
					<input oninput="updatePreviewCommand()" class="argument-default-value argument-input" placeholder="Значение по умолчанию" />
				</template>

				<template id="dropdown-argument">
					<label class="isconstant-label"><input oninput="updatePreviewCommand()" type="checkbox" disabled class="argument-isconstant-checkbox" />Неизменяемый</label>
					<input oninput="updatePreviewCommand()" class="argument-name-input argument-input" placeholder="Имя" />
					<textarea spellcheck="false" class="argument-description-textarea" placeholder="Краткое описание" />
					// first element - default
					<div class="dropdown-values">
						<button onclick="addDropdownValueClick(event)" class="dropdown-add-value-button">
							<svg fill="white" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 45.402 45.402" xml:space="preserve"><g><path d="M41.267,18.557H26.832V4.134C26.832,1.851,24.99,0,22.707,0c-2.283,0-4.124,1.851-4.124,4.135v14.432H4.141   c-2.283,0-4.139,1.851-4.138,4.135c-0.001,1.141,0.46,2.187,1.207,2.934c0.748,0.749,1.78,1.222,2.92,1.222h14.453V41.27   c0,1.142,0.453,2.176,1.201,2.922c0.748,0.748,1.777,1.211,2.919,1.211c2.282,0,4.129-1.851,4.129-4.133V26.857h14.435   c2.283,0,4.134-1.867,4.133-4.15C45.399,20.425,43.548,18.557,41.267,18.557z"></path></g></svg>
						</button>
					</div>
					<template id="argument-dropdown-value-template">
						<div class="dropdown-value">
							<input oninput="updatePreviewCommand()" class="dropdown-value-input argument-input" />
							<button onclick="deleteDropdownValue(event)" class="dropdown-value-delete">
								<svg fill="#000000" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 490 490" xml:space="preserve">
									<polygon points="456.851,0 245,212.564 33.149,0 0.708,32.337 212.669,245.004 0.708,457.678 33.149,490 245,277.443 456.851,490   489.292,457.678 277.331,245.004 489.292,32.337 "/>
								</svg>
							</button>
							<script>
								$(document.currentScript.previousElementSibling).hover(function(){
									$(this).prev().toggleClass('trembling');
								});
							</script>
						</div>
					</template>
				</template>

				if (strings.HasPrefix(title, "Создание")) {
					<button onclick="createTemplateClick(event)" type="button" class="create-form-button">
						Создать
					</button>
				} else {
					<button onclick="editTemplateClick(event)" type="button" class="create-form-button">
						Изменить
					</button>
				}

				<div hidden="true" class="lds-ellipsis loading-animation"><div></div><div></div><div></div><div></div></div>
			</form>

			<template id="preview-param-template">
				<div class="preview-command-commandparam">
					<script>
						el = document.currentScript.closest(".preview-command-commandparam");
						el.addEventListener("click", (event) => excludeParamClick(event));

						el.addEventListener('mousedown', event => {
							if (event.shiftKey) {
								event.preventDefault();
							}
						});
					</script>
				</div>
			</template>
			<template id="preview-param-empty-template">
				<span class="preview-command-text preview-commandparam-empty"></span> 
			</template>
			<template id="preview-param-popup-template">
				<span class="preview-command-text preview-command-string-name"></span>
				<div class="dropdown">
				<button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
				</button>
				<ul class="dropdown-menu">
				</ul>
				</div>
			</template>
			<template id="param-value-template">
				<li><a class="dropdown-item" href="#"></a></li>
			</template>
			<template id="preview-param-nameless-template">
				<input class="preview-command-nameless" />
			</template>
			<template id="preview-param-string-template">
				<span class="preview-command-text preview-command-string-name"></span>
				<input class="preview-command-string-input" />
			</template>
			<template id="preview-param-constant-template">
				<span class="preview-command-text"></span> 
			</template>
		</div>
		<script>

		function disabledDropdownToogle(event) {
			console.log("here");
			event.preventDefault();
		}
		document.addEventListener("click", (event) => {
			if (event.shiftKey) {
				console.log("shift");
				document.querySelectorAll(".dropdown-toggle").forEach((elem) => {
					console.log(elem);
					elem.addEventListener("show.bs.dropdown", disabledDropdownToogle);
				});
			} else {
				document.querySelectorAll(".dropdown-toogle").forEach((elem) => {
					elem.removeEventListener("show.bs.dropdown", disabledDropdownToogle);
				});
			}
		}, true);
		</script>
	}
}